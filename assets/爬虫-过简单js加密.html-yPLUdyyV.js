import{_ as n,o as s,c as a,d as t}from"./app-CFIaTHNp.js";const p="/assets/20200904175700699_9216-Bwv5ITTN.png",o="/assets/20200907113712971_21558-BRHsUo-X.png",e={},c=t('<h1 id="过简单js加密" tabindex="-1"><a class="header-anchor" href="#过简单js加密" aria-hidden="true">#</a> 过简单js加密</h1><blockquote><p>背景: 爬虫需要过加密的, 其中使用了第三方库 pkg: https://www.cnblogs.com/mordom/p/8337337.html</p></blockquote><h2 id="_0x00-chrome-debug" tabindex="-1"><a class="header-anchor" href="#_0x00-chrome-debug" aria-hidden="true">#</a> 0x00 chrome debug</h2><p><img src="'+p+`" alt=""></p><p>在这里可以看到, 使用的是crypto-js</p><p>根据google 搜索到了这么一篇博文</p><blockquote><p>https://www.codenong.com/js1a0dde3f1b57/</p></blockquote><p>无奈本人对python 的Crypto模块 不太熟悉, 没能实现</p><p>只能编写js,并使用node 进行测试</p><p>使用前需安装node环境</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
<span class="token keyword">const</span> r <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto-js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> program <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;commander&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//https://github.com/tj/commander.js</span>

<span class="token keyword">let</span> crypto <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">Encrypt</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> e <span class="token operator">=</span> r<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;t171420100302rsa&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">,</span> n <span class="token operator">=</span> r<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;t171420100302rsa&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">,</span> o <span class="token operator">=</span> r<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
            <span class="token punctuation">,</span> i <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> e<span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">iv</span><span class="token operator">:</span> n<span class="token punctuation">,</span>
            <span class="token literal-property property">mode</span><span class="token operator">:</span> r<span class="token punctuation">.</span>mode<span class="token punctuation">.</span><span class="token constant">CBC</span><span class="token punctuation">,</span>
            <span class="token literal-property property">padding</span><span class="token operator">:</span> r<span class="token punctuation">.</span>pad<span class="token punctuation">.</span>Pkcs7
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> r<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Base64<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>ciphertext<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">decoto</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> e <span class="token operator">=</span> r<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Base64<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
            <span class="token punctuation">,</span> n <span class="token operator">=</span> r<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;t171420100302rsa&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">,</span> o <span class="token operator">=</span> r<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;t171420100302rsa&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">,</span> i <span class="token operator">=</span> r<span class="token punctuation">.</span>lib<span class="token punctuation">.</span>CipherParams<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">ciphertext</span><span class="token operator">:</span> e
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> r<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> n<span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">iv</span><span class="token operator">:</span> o<span class="token punctuation">,</span>
            <span class="token literal-property property">mode</span><span class="token operator">:</span> r<span class="token punctuation">.</span>mode<span class="token punctuation">.</span><span class="token constant">CBC</span><span class="token punctuation">,</span>
            <span class="token literal-property property">padding</span><span class="token operator">:</span> r<span class="token punctuation">.</span>pad<span class="token punctuation">.</span>Pkcs7
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> Encrypt<span class="token operator">=</span>crypto<span class="token punctuation">.</span>Encrypt<span class="token punctuation">;</span>
<span class="token keyword">let</span> Decoto <span class="token operator">=</span> crypto<span class="token punctuation">.</span>decoto<span class="token punctuation">;</span>

program
    <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">&#39;0.0.1&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&quot;-E, --Encrypt &lt;str&gt;&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Encrypt str&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&quot;-D, --Decoto &lt;str&gt;&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;decoto str&quot;</span><span class="token punctuation">)</span>

program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>program<span class="token punctuation">.</span>Encrypt<span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Encrypt</span><span class="token punctuation">(</span>program<span class="token punctuation">.</span>Encrypt<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>program<span class="token punctuation">.</span>Decoto<span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Decoto</span><span class="token punctuation">(</span>program<span class="token punctuation">.</span>Decoto<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>初始化npm 并安装js依赖</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm init
npm i crypto-js
npm i commander
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后使用命令行进行调用</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
<span class="token function">node</span> main.js <span class="token parameter variable">-D</span> xxxxx

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了方便调用, 使用pkg 打包为linux 的可执行文件</p><blockquote><p>pkg: https://www.cnblogs.com/mordom/p/8337337.html</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pkg .

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>即可生成文件, 缺点是可执行文件比较大, 优点是开发成本比较低</p><p>使用: <img src="`+o+'" alt=""></p><p>-E 进行加密 -D 进行解密</p>',21),i=[c];function u(l,r){return s(),a("div",null,i)}const d=n(e,[["render",u],["__file","爬虫-过简单js加密.html.vue"]]);export{d as default};
