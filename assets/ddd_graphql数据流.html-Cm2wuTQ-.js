import{_ as e,o as t,c as d,d as p}from"./app-CFIaTHNp.js";const r={},a=p(`<h1 id="ddd-graphql数据流" tabindex="-1"><a class="header-anchor" href="#ddd-graphql数据流" aria-hidden="true">#</a> ddd+graphql数据流</h1><p>数据流 kong就是openresty的一个应用，nginx</p><p>前端 -&gt; kong （解析token，装上user信息）-&gt;后端</p><p>-&gt; controller层 -&gt;resolve-&gt; types -&gt; graphql input -&gt; 封装为command</p><p>-&gt; 应用层-&gt; mutation_service -&gt; 调用各种domain、repo方法， -&gt; domain 层， 领域方法 -&gt; 调用domain层repo的方法（实现在infrastructure中），持久化到db</p><p>返回数据，在应用层中定义了各种Representation，可以序列化数据</p><p>与Django的映射： types = view之前的数据解析 apps = view</p><p>问题1：数据校验，唯一性校验应该db实现 问题2：数据默认值，应该在orm层实现，还是在app层实现 问题3：选择输入，如何判断输入数据有效性？</p><pre><code>基础的，应该在domain的validate中定义，抛出ValueError即可
复杂的，比如增加工段需要工序id，就需判断工序id是否存在，是否同一个租户下的，
	这种应该在app层实现
</code></pre><p>问题4：关联关系时，db-orm只存储关联的id，那聚合根的model如何写？ graphql的types怎么写？中间如何转换</p>`,10),o=[a];function n(i,s){return t(),d("div",null,o)}const g=e(r,[["render",n],["__file","ddd_graphql数据流.html.vue"]]);export{g as default};
