import{_ as e,o as i,c as n,d as a}from"./app-CFIaTHNp.js";const d="/assets/339666605625810-BJFtqSE0.png",s="/assets/44541929951561-tQJufBgo.png",t={},r=a('<h1 id="webodm配置安装" tabindex="-1"><a class="header-anchor" href="#webodm配置安装" aria-hidden="true">#</a> webodm配置安装</h1><h2 id="moyechen-23-9-24" tabindex="-1"><a class="header-anchor" href="#moyechen-23-9-24" aria-hidden="true">#</a> moyechen 23.9.24</h2><p>环境配置 windows11</p><p>rtx4070 已在windwos部署好驱动,cuda</p><h3 id="步骤1-wsl2配置" tabindex="-1"><a class="header-anchor" href="#步骤1-wsl2配置" aria-hidden="true">#</a> 步骤1 wsl2配置</h3><p>启动wsl 可能需要更新，wsl --update 打开微软应用闪电，搜索ubuntu，安装ubuntu</p><p>安装结束后，点击启动，需初始化ubuntu的账号密码</p><h3 id="步骤1-安装docker-desktop" tabindex="-1"><a class="header-anchor" href="#步骤1-安装docker-desktop" aria-hidden="true">#</a> 步骤1 安装docker desktop</h3><p>从官网下载即可 启动后打开设置，勾选wsl2，选中刚安装的ubuntu <img src="'+d+`" alt=""></p><h3 id="ubuntu-nvidia驱动配置" tabindex="-1"><a class="header-anchor" href="#ubuntu-nvidia驱动配置" aria-hidden="true">#</a> ubuntu nvidia驱动配置</h3><blockquote><p>https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html#installing-with-apt</p></blockquote><p>进入ubuntu</p><p>配置gpgkey</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \\
  &amp;&amp; curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \\
    sed &#39;s#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g&#39; | \\
    sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list \\
  &amp;&amp; \\
    sudo apt-get update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装工具包</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo apt-get install -y nvidia-container-toolkit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo nvidia-ctk runtime configure --runtime=docker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>但是wsl的配置文件不在<code>/etc/docker/</code>下，我们吧工具增加的内容复制出来，去docker desktop配置即可 <img src="`+s+`" alt=""></p><p>修改后点击右下角apply&amp;restart</p><p>重启完成后，检测是否部署成功</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo docker run --rm --runtime=nvidia --gpus all ubuntu nvidia-smi
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Your output should resemble the following output:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>+-----------------------------------------------------------------------------+
| NVIDIA-SMI 535.86.10    Driver Version: 535.86.10    CUDA Version: 12.2     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  Tesla T4            On   | 00000000:00:1E.0 Off |                    0 |
| N/A   34C    P8     9W /  70W |      0MiB / 15109MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+

+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="步骤3-拉取项目文件" tabindex="-1"><a class="header-anchor" href="#步骤3-拉取项目文件" aria-hidden="true">#</a> 步骤3 拉取项目文件</h3><p>在打开的ubuntu中, 拉取项目（需提前安装git)</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git clone https://github.com/OpenDroneMap/WebODM
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="步骤4-启动" tabindex="-1"><a class="header-anchor" href="#步骤4-启动" aria-hidden="true">#</a> 步骤4 启动</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./webodm.sh start --gpu
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="mipc杂项" tabindex="-1"><a class="header-anchor" href="#mipc杂项" aria-hidden="true">#</a> mipc杂项</h3><p><strong>时间估算</strong> 132张照片大概一小时</p><p>132×132/5 ~= 3600</p><p>256张大概4小时</p><p><strong>gpu</strong> 实际gpu使用率一直没上去，也不知道为啥</p><p><strong>测试数据集</strong></p><p>https://github.com/pierotofy/dataset_banana/tree/master</p>`,36),l=[r];function u(c,o){return i(),n("div",null,l)}const v=e(t,[["render",u],["__file","webodm配置安装.html.vue"]]);export{v as default};
