import{_ as n,o as s,c as a,d as t}from"./app-CFIaTHNp.js";const p="/assets/284455698836999-liV7gZ0D.png",e="/assets/147946907626091-bCqKd1un.png",o="/assets/500087022133366-DDvd6bWC.png",c="/assets/501727794900246-gj1H9hLz.png",i="/assets/401180871947710-DgCq6Rw0.png",l="/assets/298007630951842-PGZTBLwh.png",u="/assets/287800781817896-BWnLPOq3.png",r="/assets/239891913912036-C770AUF1.png",d="/assets/270522409533576-Bddekniz.png",k="/assets/548223420659412-DpAnKmYm.png",v={},m=t(`<h1 id="乐观锁、悲观锁、分布式锁" tabindex="-1"><a class="header-anchor" href="#乐观锁、悲观锁、分布式锁" aria-hidden="true">#</a> 乐观锁、悲观锁、分布式锁</h1><p>假设抢购系统，1000用户在10秒内购买一个商品</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&quot;&quot;&quot;
并发更新速度测试
ab -n 1000 -c 100 http://127.0.0.1:8000/
&quot;&quot;&quot;</span>

<span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI
<span class="token keyword">import</span> pymysql
<span class="token comment"># SQLALCHEMY_DATABASE_URL = &quot;postgresql://postgres:postgres@localhost:5432/demo2&quot;</span>
<span class="token keyword">import</span> redis
<span class="token keyword">from</span> redis <span class="token keyword">import</span> Redis

app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span>
pool <span class="token operator">=</span> redis<span class="token punctuation">.</span>ConnectionPool<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">6379</span><span class="token punctuation">,</span> max_connections<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token comment"># 链接数量要大于最大并发数，否则实例化不出来</span>


<span class="token keyword">def</span> <span class="token function">leguan</span><span class="token punctuation">(</span>retry<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> db<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> db <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>Connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span> user<span class="token operator">=</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">&#39;example&#39;</span><span class="token punctuation">,</span> db<span class="token operator">=</span><span class="token string">&#39;moye&#39;</span><span class="token punctuation">)</span>
    db<span class="token punctuation">.</span>begin<span class="token punctuation">(</span><span class="token punctuation">)</span>
    cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>
    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">&quot;select * from emp where id=1&quot;</span><span class="token punctuation">)</span>
    version <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>

    count <span class="token operator">=</span> cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">&quot;update emp set value=value-1, version=version+1 where id=1 and value-1&gt;=0 and version=&quot;</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>version<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> count <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
        db<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> retry <span class="token operator">&lt;=</span> <span class="token number">4</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> leguan<span class="token punctuation">(</span>retry <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> db<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;shibai&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;shibail&quot;</span><span class="token punctuation">}</span>
    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;World&quot;</span><span class="token punctuation">}</span>

<span class="token keyword">def</span> <span class="token function">beiguan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>Connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span> user<span class="token operator">=</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">&#39;example&#39;</span><span class="token punctuation">,</span> db<span class="token operator">=</span><span class="token string">&#39;moye&#39;</span><span class="token punctuation">)</span>
    db<span class="token punctuation">.</span>begin<span class="token punctuation">(</span><span class="token punctuation">)</span>
    cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>
    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">&quot;select * from emp where id=1 for update&quot;</span><span class="token punctuation">)</span>
    version <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>

    count <span class="token operator">=</span> cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">&quot;update emp set value=value-1, version=version+1 where id=1 and value-1&gt;=0&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> count <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
        db<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;shibai&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;shibail&quot;</span><span class="token punctuation">}</span>
    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;World&quot;</span><span class="token punctuation">}</span>

<span class="token keyword">def</span> <span class="token function">redis_</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    redis_client<span class="token punctuation">:</span> Redis <span class="token operator">=</span> redis<span class="token punctuation">.</span>Redis<span class="token punctuation">(</span>connection_pool<span class="token operator">=</span>pool<span class="token punctuation">)</span>
    <span class="token comment"># redis_client: Redis = redis.from_url(&quot;redis://localhost:6379&quot;)</span>
    <span class="token keyword">with</span> redis_client<span class="token punctuation">.</span>lock<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&#39;id_1&#39;</span><span class="token punctuation">,</span>sleep<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">,</span> blocking_timeout<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

        db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>Connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span> user<span class="token operator">=</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">&#39;example&#39;</span><span class="token punctuation">,</span> db<span class="token operator">=</span><span class="token string">&#39;moye&#39;</span><span class="token punctuation">)</span>
        db<span class="token punctuation">.</span>begin<span class="token punctuation">(</span><span class="token punctuation">)</span>
        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>
        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">&quot;select * from emp where id=1&quot;</span><span class="token punctuation">)</span>
        version <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>

        count <span class="token operator">=</span> cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">&quot;update emp set value=value-1, version=version+1 where id=1 and value-1&gt;=0&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> count <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            db<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;shibai&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;shibail&quot;</span><span class="token punctuation">}</span>
        db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;World&quot;</span><span class="token punctuation">}</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">read_root</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># leguan() # 乐观锁100个请求，在一秒内只能成功5-15个</span>
    <span class="token comment"># beiguan() # 悲观锁速度没慢多少的同时，全部成功了</span>
    redis_<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># redis由于需要cpu sleep ，属于是又慢又怕锁超时</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用ab压测</p><h3 id="_100并发" tabindex="-1"><a class="header-anchor" href="#_100并发" aria-hidden="true">#</a> 100并发</h3><h4 id="悲观锁" tabindex="-1"><a class="header-anchor" href="#悲观锁" aria-hidden="true">#</a> 悲观锁</h4><p><img src="`+p+'" alt=""></p><h4 id="乐观锁" tabindex="-1"><a class="header-anchor" href="#乐观锁" aria-hidden="true">#</a> 乐观锁</h4><p><img src="'+e+'" alt=""></p><p>可惜只有6个购买成功</p><h3 id="并发100-总共1000个" tabindex="-1"><a class="header-anchor" href="#并发100-总共1000个" aria-hidden="true">#</a> 并发100， 总共1000个</h3><h4 id="乐观锁-成功147个" tabindex="-1"><a class="header-anchor" href="#乐观锁-成功147个" aria-hidden="true">#</a> 乐观锁 成功147个</h4><p><img src="'+o+'" alt=""></p><h4 id="悲观锁-1" tabindex="-1"><a class="header-anchor" href="#悲观锁-1" aria-hidden="true">#</a> 悲观锁</h4><p>又快又好，真离谱</p><p><img src="'+c+'" alt=""></p><p><img src="'+i+'" alt=""></p><h4 id="redis" tabindex="-1"><a class="header-anchor" href="#redis" aria-hidden="true">#</a> redis</h4><p><img src="'+l+'" alt=""></p><h3 id="并发200-总共1000" tabindex="-1"><a class="header-anchor" href="#并发200-总共1000" aria-hidden="true">#</a> 并发200，总共1000</h3><h4 id="悲观锁-2" tabindex="-1"><a class="header-anchor" href="#悲观锁-2" aria-hidden="true">#</a> 悲观锁</h4><p><img src="'+u+'" alt=""></p><h4 id="redis-分布式锁" tabindex="-1"><a class="header-anchor" href="#redis-分布式锁" aria-hidden="true">#</a> redis 分布式锁</h4><p><img src="'+r+'" alt=""></p><h4 id="悲观锁-async-sqlalchemy" tabindex="-1"><a class="header-anchor" href="#悲观锁-async-sqlalchemy" aria-hidden="true">#</a> 悲观锁+async sqlalchemy</h4><p><img src="'+d+'" alt=""></p><h4 id="reids锁-async-aioreids" tabindex="-1"><a class="header-anchor" href="#reids锁-async-aioreids" aria-hidden="true">#</a> reids锁+ async aioreids</h4><p>慢的离谱，cpu90%</p><p><img src="'+k+`" alt=""></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&quot;&quot;&quot;
并发更新速度测试
ab -n 1000 -c 100 http://127.0.0.1:8000/
&quot;&quot;&quot;</span>

<span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI
<span class="token comment"># SQLALCHEMY_DATABASE_URL = &quot;postgresql://postgres:postgres@localhost:5432/demo2&quot;</span>
<span class="token keyword">import</span> sqlalchemy <span class="token keyword">as</span> sa
<span class="token keyword">from</span> aioredis <span class="token keyword">import</span> Redis
<span class="token keyword">import</span> aioredis
app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># pool = aioredis.ConnectionPool(host=&#39;localhost&#39;, port=6379, max_connections=100) # 链接数量要大于最大并发数，否则实例化不出来</span>
<span class="token keyword">from</span> sqlalchemy<span class="token punctuation">.</span>ext<span class="token punctuation">.</span>asyncio <span class="token keyword">import</span> create_async_engine

engine <span class="token operator">=</span> create_async_engine<span class="token punctuation">(</span>
    <span class="token string">&quot;mysql+asyncmy://root:example@localhost:3306/moye&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">beiguan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">async</span> <span class="token keyword">with</span> engine<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> db<span class="token punctuation">,</span> db<span class="token punctuation">.</span>begin<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>


        result <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sa<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token string">&quot;select * from emp where id=1 for update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        version <span class="token operator">=</span> result<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>

        count <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sa<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token string">&quot;update emp set value=value-1, version=version+1 where id=1 and value-1&gt;=0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;World&quot;</span><span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">redis_</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># redis_client: Redis = redis.Redis(connection_pool=pool)</span>
    redis_client<span class="token punctuation">:</span> Redis <span class="token operator">=</span> Redis<span class="token punctuation">.</span>from_url<span class="token punctuation">(</span><span class="token string">&quot;redis://localhost:6379&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> redis_client<span class="token punctuation">.</span>lock<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&#39;id_1&#39;</span><span class="token punctuation">,</span>sleep<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">,</span> blocking_timeout<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">async</span> <span class="token keyword">with</span> engine<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> db<span class="token punctuation">,</span> db<span class="token punctuation">.</span>begin<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            result <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sa<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token string">&quot;select * from emp where id=1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            version <span class="token operator">=</span> result<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>

            count <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sa<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token string">&quot;update emp set value=value-1, version=version+1 where id=1 and value-1&gt;=0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>



<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_root</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># leguan() # 乐观锁100个请求，在一秒内只能成功5-15个b</span>
    <span class="token keyword">await</span> beiguan<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 悲观锁速度没慢多少的同时，全部成功了</span>
    <span class="token comment"># await redis_() # redis由于需要cpu sleep ，属于是又慢又怕锁超时</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30),b=[m];function h(g,y){return s(),a("div",null,b)}const _=n(v,[["render",h],["__file","乐观锁、悲观锁、分布式锁.html.vue"]]);export{_ as default};
