import{_ as t,r as i,o as l,c as o,a as s,b as a,e as d,d as n}from"./app-CFIaTHNp.js";const c={},p=n(`<h1 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql" aria-hidden="true">#</a> Mysql</h1><h2 id="_2020-9-28" tabindex="-1"><a class="header-anchor" href="#_2020-9-28" aria-hidden="true">#</a> 2020/9/28</h2><h3 id="重置mysql密码" tabindex="-1"><a class="header-anchor" href="#重置mysql密码" aria-hidden="true">#</a> 重置mysql密码</h3><p>服务器版本: ubuntu</p><p>第一步：停止mysql服务 <code>sudo /etc/init.d/mysqld stop</code> or <code>sudo service mysql stop</code></p><p>第二步, 以跳过密码验证模式启动mysql , 这一步窗口会阻塞, 需要再开启一个终端 <code>sudo mysqld_safe --skip-grant-tables</code></p><p>可能有人这个时候报了一个错误, <code>mysqld_safe Directory &#39;/var/run/mysqld&#39; for UNIX socket file don&#39;t exists</code></p><p>google 得到解决方案</p><blockquote><p>https://stackoverflow.com/questions/42153059/mysqld-safe-directory-var-run-mysqld-for-unix-socket-file-dont-exists</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo mkdir -p /var/run/mysqld
sudo chown mysql:mysql /var/run/mysqld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>问题解决</p><p>第三步: 进入mysql</p><p><code>mysql</code></p><p>第四步, 更新密码,这里我将密码改为<code>your_password</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>
use mysql;

update user set authentication_string = password(&quot;your_password&quot;) where user = &quot;root&quot;;
flush privileges;

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后重启mysql 即可</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>先杀掉我们
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2020-4-5" tabindex="-1"><a class="header-anchor" href="#_2020-4-5" aria-hidden="true">#</a> 2020/4/5</h2><h3 id="select-insert" tabindex="-1"><a class="header-anchor" href="#select-insert" aria-hidden="true">#</a> select insert</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> table2
<span class="token punctuation">(</span>column_name<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">SELECT</span> column_name<span class="token punctuation">(</span>s<span class="token punctuation">)</span>
<span class="token keyword">FROM</span> table1<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2020-3-29" tabindex="-1"><a class="header-anchor" href="#_2020-3-29" aria-hidden="true">#</a> 2020/3/29</h2><h3 id="mysql-语句分析" tabindex="-1"><a class="header-anchor" href="#mysql-语句分析" aria-hidden="true">#</a> mysql 语句分析:</h3><p>explain + sql语句</p><h3 id="数据类型为text-的时间字段-对比" tabindex="-1"><a class="header-anchor" href="#数据类型为text-的时间字段-对比" aria-hidden="true">#</a> 数据类型为text 的时间字段, 对比</h3><ol><li>最简形式 96s</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>tousu_heimao_table<span class="token punctuation">\`</span></span> <span class="token keyword">WHERE</span> complaint_time <span class="token operator">&gt;</span> <span class="token string">&#39;2020-03-27&#39;</span>


加入<span class="token keyword">limit</span> <span class="token number">50</span>
<span class="token keyword">SELECT</span> id <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>tousu_heimao_table<span class="token punctuation">\`</span></span> <span class="token keyword">WHERE</span> complaint_time <span class="token operator">&gt;</span> <span class="token string">&#39;2020-03-27&#39;</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> complaint_time <span class="token keyword">limit</span> <span class="token number">50</span><span class="token punctuation">;</span>  <span class="token number">5</span>s

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>使用时间戳,以及替换*为字段名 45s</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> id<span class="token punctuation">,</span>identity_code<span class="token punctuation">,</span>crawl_time<span class="token punctuation">,</span>title<span class="token punctuation">,</span>complain_man<span class="token punctuation">,</span>website<span class="token punctuation">,</span>object_of_complaint<span class="token punctuation">,</span>question_type<span class="token punctuation">,</span>appeal_type<span class="token punctuation">,</span>details_of_complaint<span class="token punctuation">,</span>process_flow<span class="token punctuation">,</span>comment_data<span class="token punctuation">,</span>complaint_time <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>tousu_heimao_table<span class="token punctuation">\`</span></span> <span class="token keyword">WHERE</span> unix_timestamp<span class="token punctuation">(</span>complaint_time<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1585281379</span><span class="token punctuation">\`</span>



</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>只查询id,没有设置limit</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SELECT id FROM \`tousu_heimao_table\` WHERE unix_timestamp(complaint_time) &gt; 1585281379 limit 50
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>前50个 6.5s, 第1000-1050个, 65s</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SELECT id FROM \`tousu_heimao_table\` WHERE unix_timestamp(complaint_time) &gt; 1585281379 ORDER BY complaint_time DESC limit 50
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>第100000-100050条 40s</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SELECT id FROM \`tousu_heimao_table\` WHERE 1=1 ORDER BY complaint_time DESC limit 100000,50
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="6"><li>稍微优化, 27s</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SELECT id FROM \`tousu_heimao_table\` WHERE id &gt; (select id from \`tousu_heimao_table\` ORDER BY complaint_time DESC limit 100000,1) limit 50
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>7.究极优化 3s</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SELECT * FROM \`tousu_heimao_table\` WHERE id &gt; (select id from \`tousu_heimao_table\` ORDER BY id  limit 100000,1) limit 50
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>8 .加入时间 2s</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SELECT * FROM \`tousu_heimao_table\` WHERE id &gt; (select id from \`tousu_heimao_table\` where complaint_time&gt;&#39;2019-3-27&#39;    ORDER BY id  limit 100000,1) limit 50
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="9"><li>字段数据类型设置为datetime</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SELECT * FROM tousu_table WHERE complaint_time &gt; &#39;2020-3-27&#39; limit 100;   7s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SELECT * FROM tousu_table WHERE complaint_time &gt; &#39;2020-03-27&#39; limit 100;  10s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="输出表的字段名-2020-03-26" tabindex="-1"><a class="header-anchor" href="#输出表的字段名-2020-03-26" aria-hidden="true">#</a> 输出表的字段名 2020/03/26</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> COLUMN_NAME <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">COLUMNS</span> <span class="token keyword">where</span> table_name <span class="token operator">=</span> <span class="token string">&#39;your_table_name&#39;</span> <span class="token operator">and</span> table_schema <span class="token operator">=</span> <span class="token string">&#39;your_db_name&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="查询所有符合要求的行数-同时取limit数据" tabindex="-1"><a class="header-anchor" href="#查询所有符合要求的行数-同时取limit数据" aria-hidden="true">#</a> 查询所有符合要求的行数, 同时取limit数据</h3><p>一般思路: 查一下count(1) , 然后把count(1) 换成 * , 后面加上limit 0, 50, 再次查询得到数据</p>`,47),r={href:"https://blog.csdn.net/qq_31122833/article/details/83894509",target:"_blank",rel:"noopener noreferrer"},u=n(`<blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> SQL_CALC_FOUND_ROWS 
    col_name1 <span class="token keyword">as</span> colName1<span class="token punctuation">,</span>
    col_name2 <span class="token keyword">as</span> colName2
<span class="token keyword">from</span> table_name <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> FOUND_ROWS<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> count<span class="token punctuation">;</span>
 
在<span class="token keyword">SELECT</span>语句中加上修饰SQL_CALC_FOUND_ROWS 之后，<span class="token keyword">SELECT</span> FOUND_ROWS<span class="token punctuation">(</span><span class="token punctuation">)</span> 会返回满足条件记录的总数。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样，你执行完 select SQL_CALC_FOUND_ROWS 之后，再取一下记录总数就行了。</p></blockquote><h2 id="_3-29" tabindex="-1"><a class="header-anchor" href="#_3-29" aria-hidden="true">#</a> 3/29:</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code> <span class="token keyword">SELECT</span> SQL_CALC_FOUND_ROWS
	<span class="token operator">*</span>
<span class="token keyword">FROM</span>
	tousu_table 
<span class="token keyword">WHERE</span>
	<span class="token punctuation">(</span>complaint_time <span class="token operator">&lt;=</span> <span class="token string">&#39;2020-03-30&#39;</span> <span class="token operator">AND</span> complaint_time <span class="token operator">&gt;=</span> <span class="token string">&#39;2020-03-22&#39;</span> <span class="token punctuation">)</span>
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>
	complaint_time 
	<span class="token keyword">LIMIT</span> <span class="token number">0</span><span class="token punctuation">,</span>
	<span class="token number">50</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>建立索引后,加与不加时间差异很大,加上后6.6s 不加1s</p><p>使用这个东西会导致全表扫描</p>`,5);function m(v,k){const e=i("ExternalLinkIcon");return l(),o("div",null,[p,s("p",null,[a("优化: "),s("a",r,[a("博客"),d(e)])]),u])}const _=t(c,[["render",m],["__file","Mysql.html.vue"]]);export{_ as default};
