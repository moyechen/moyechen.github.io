vnote_backup_file_826537664 E:/OneDrive/blog.moyechen.cn/python/进程管理.md
# 进程管理

>supervisor 管理进程简明教程:https://www.jianshu.com/p/bf2b3f4dec73
>使用 supervisor 管理进程:https://liyangliang.me/posts/2015/06/using-supervisor/
>https://www.cnblogs.com/wswang/p/5795766.html

方便管理 = peizhi复杂

为实现进程管理, 需要先对程序做以下分类

- demo 程序: 可能会出问题的程序, 需要保留程序上下文
1.使用screen 进行操作

```bash
screen -S screen_Name

python3 main.py
```
2.```nohup python3 main.py > log  2>&1 &```
 

- 例行任务
1. crontab 

这种是比较简单的方式,缺点在于移动文件时不好管理


2. superversion + schedule(APScheduler)

配置较复杂
带有web接口

superversion program.conf
```
[program:zhonghua]
command=python3 APScheduler_main.py              ; the program (relative uses PATH, can take args)
process_name=%(program_name)s ; process_name expr (default %(program_name)s)
numprocs=1                    ; number of processes copies to start (def 1)
directory=/home/ubuntu/zorsong/zhonghua_task                ; directory to cwd to before exec (def no cwd)
;umask=022                     ; umask for process (default None)
;priority=999                  ; the relative start priority (default 999)
;autostart=true                ; start at supervisord start (default: true)
;startsecs=1                   ; # of secs prog must stay up to be running (def. 1)
;startretries=3                ; max # of serial start failures when starting (default 3)
autorestart=unexpected        ; when to restart if exited after running (def: unexpected)
exitcodes=0,2                 ; 'expected' exit codes used with autorestart (default 0,2)
stopsignal=QUIT               ; signal used to kill process (default TERM)
stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)
stopasgroup=false             ; send stop signal to the UNIX process group (default false)
killasgroup=false             ; SIGKILL the UNIX process group (def false)
user=ubuntu                   ; setuid to this UNIX account to run the program
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/home/ubuntu/zorsong/zhonghua_task/logfile        ; stdout log path, NONE for none; default AUTO
;stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stdout_logfile_backups=10     ; # of stdout logfile backups (default 10)
;stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
;stdout_events_enabled=false   ; emit events on stdout writes (default false)
stderr_logfile=/home/ubuntu/zorsong/zhonghua_task/logfile        ; stderr log path, NONE for none; default AUTO
;stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stderr_logfile_backups=10     ; # of stderr logfile backups (default 10)
;stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
;stderr_events_enabled=false   ; emit events on stderr writes (default false)
;environment=A="1",B="2"       ; process environment additions (def no adds)
;serverurl=AUTO                ; override serverurl computation (childutils)
```


### APScheduler




```python

def foo():
    print("foo")


from apscheduler.schedulers.background import BackgroundScheduler

sch = BackgroundScheduler()

sch.add_job(foo) # 不加时间, 会在sch.start()后立即执行
sch.add_job(foo,'interval',minutes=5)  # 每5分钟执行一次
sch.add_job(foo, 'cron', hour='9') # 每天的09:00 执行一次



```


### 20201026 

http://www.vuln.cn/9121



 