vnote_backup_file_826537664 D:/OneDrive/blog.moyechen.cn/acm/cf/CF1313C.md
#  CF1313C Skyscrapers (easy version)




## 题意
这是问题的简单版本。在这个版本中N<=1000

首都郊区正在积极地在Berland建立。“内核恐慌”公司管理着新贝尔斯克瓦的摩天大楼住宅区的建设。所有摩天大楼都是沿着高速公路建造的。众所周知，该公司已经购买了 N沿着公路积and，正在准备建造 N 摩天大楼，每个地块一个摩天大楼。

建筑师在计划摩天大楼时必须考虑几个要求。首先，由于每个地块上的土地具有不同的属性，因此每个摩天大楼在可拥有的最大楼层数上都有限制。其次，根据城市的设计规范，摩天大楼的左右两侧同时拥有较高的摩天大楼是不可接受的。

正式地，让我们对地块进行编号1  至 `N`。然后，如果摩天大楼在`i`处有`ai`  高度，它必须保持  最多 `mi` （）。也不能有整数 和  这样  和 。情节 和 是不要求为邻近。

该公司希望建成的摩天大楼的楼层总数尽可能大。帮助它以最佳方式（即满足所有要求的方式）为每个摩天大楼选择楼层数，并在所有此类建筑计划中选择具有最大可能总楼层数的任何计划。

## 思路
 
 ci暴力过
枚举每栋楼做最高的那种情况,求出最优解

## 代码

```c++

#include<bits/stdc++.h>
using namespace std;
typedef long long ll;

/*
moyechen
2020-02-23  17:06
*/


const int maxn = 5e5 + 5;
const int inf  = 0x3f3f3f3f;


vector<ll> v,ans,tmp;


int main() {
    std::ios::sync_with_stdio(false);
    cin.tie(0);

    int n;
    cin>>n;
    for (int i = 0; i < n; i++)
    {
        ll tmp1;
        cin>>tmp1;
        tmp.push_back(tmp1);
    }
    
    
    ll ma = -1;
    for (int i = 0; i < n; i++)
    {

        v = tmp;
        
        ll sum = v[i], l_max = v[i], r_max = v[i];
        for (int j = 1; j < n; j++)
        {
            if(i + j <n){ //右边的在范围内

                  
                r_max = min(v[i+j],r_max);
                sum+= r_max;
                v[i+j] = r_max;
            }
            if(i - j>=0){
                l_max = min(v[i-j],l_max);
                sum += l_max;
                v[i-j] = l_max;
            }

        }
        if(sum > ma){
            ans = v;
            ma = sum;
        }
    }
    
    for (int i = 0; i < n; i++)
    {
        cout<<ans[i]<<" ";
    }
    


    
    return 0;
}

```